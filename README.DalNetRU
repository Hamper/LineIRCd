[ Unreal3.2.1-DalNetRU2.2.1 ]

Unreal3.2.1-DalNetRU2.2.1 - это редакция сервера Unreal3.2.1,
предназначенная для русскоязычной IRC сети Dal.Net.Ru и других
русскоязычных серверов. Основными возможностями является поддержка
русских ников и каналов и перекодировка по портам. Также в эту версию
добавлены некоторые модули, расширены административные функции. Полный
список изменений находится в файле Changes.DalNetRU.

Unreal-DalNetRU развивается в зависимости от потребностей сети Dal.Net.Ru.
Совместимость с другими IRCd, в том числе оригинальным UnrealIRCd, не
является задачей Unreal-DalNetRU и никаких работ в этом направлении не
проводится и не планируется проводить. Также не проводится тестирование
на совместимость с IRC сервисами. Свободно распространяемых сервисов
под Unreal-DalNetRU разработчик Unreal-DalNetRU не выпускает, поэтому
экспериментируйте сами :).

[ ЗАМЕТКИ К ВЕРСИИ Unreal3.2.1-DalNetRU2.2 ]

Данной версии присвоен номер 2.2.1. Планируется, что это последняя версия
перед началом разработки новой ветки IRCd. Вообще, финальной версией
на основе Unreal3.2.1 должна была стать 2.1.2, но из-за годового перерыва
была выпущена 2.2 и из-за недоработки в перекодировке, появившейся в 2.2,
выпускается 2.2.1.

При сборке сервера под Windows потребуется создать файл wircd.def. Это можно
сделать командой "nmake -f makefile.win32 SYMBOLFILE". Предварительно нужно
найти утилиту dlltool.exe и поместить её в корневой каталог дистрибутива IRCd
или в любой другой, указанный в переменной PATH. Это замечание не учтено в
инструкциях в файле compiling_win32.txt.

[ ПОРЯДОК УСТАНОВКИ СЕРВЕРА ]

1) Если этот сервер НЕ будет подключаться к сети Dal.Net.Ru, то обязательно
прочитайте раздел "Дополнительная идентификация IRC операторов в Dal.Net.Ru
и её отключение для серверов, которые не будут подключаться к Dal.Net.Ru".

2) Запустите конфигуратор ./Config (не ./configure - это разные
программы) и ответьте на задаваемые вопросы. Если Вы не знаете как
отвечать на вопрос - оставте значение по-умолчанию.

3) После завершения конфигурирования начните сборку сервера командой make.

4) Если сервер собран с поддержкой SSL и вы не создавали SSL сертификаты
для IRCd раньше - создайте их командой "make pem".

5) Установите сервер командой "make install".

6) Перейдите в каталог установки сервера (по умолчанию это
~/Unreal-DalNetRU).

7) Скопируйте файл unrealircd.example.conf как unrealircd.conf и
отредактируйте его в соответствии с приведенными комментариями.
Внимание! Если Вы будете подключать сервер к сети Dal.Net.Ru, то
не изменяйте параметры, не описанные в рекомендациях, и не добавляйте
другие. Если SSL порты не используются, то удалите их описание из
ircd.motd.

8) Запустите сервер командой "./unreal start".

9) Добавте в crontab (crontab -e) строку для периодического запуска
скрипта ircdchk, который перезапускает сервер в случае, если он не
работает. Это не обязательно, но рекомендуется.
Пример:
0,5,10,15,20,25,30,35,40,45,50,55 * * * * /home/ircd/Unreal-DalNetRU/ircdchk >/dev/null 2>&1

[ ОБНОВЛЕНИЕ СУЩЕСТВУЮЩЕЙ УСТАНОВКИ ]

Если сервер подключается к сети Dal.Net.Ru, то обновление с
следует проводить по инструкции с сайта http://ircd.com.ru.

В других случаях следует из существующих файлов конфигурации
удалить параметр set::hosts::coadmin, удалить загрузку модуля
noquit, добавить загрузку модуля nocloak или cloak (в случае
подключения модуля cloak следует задать ключи шифрования
в блоке set::cloak-keys), добавить новые параметры конфигурации
из раздела "Параметры конфигурации, не описанные в документации".

[ КОДИРОВКИ ]

Базовая кодировка сервера должна быть CP1251, иначе будут возникать
проблемы с русскими никами. Файлы, отправляемые пользователям, тоже
должны быть в кодировке CP1251 (ircd.motd, ircd.smotd, ircd.rules,
oper.motd, bot.motd).

[ ДОПОЛНИТЕЛЬНАЯ ИДЕНТИФИКАЦИЯ IRC ОПЕРАТОРОВ В DAL.NET.RU И ЕЁ
  ОТКЛЮЧЕНИЕ ДЛЯ СЕРВЕРОВ, КОТОРЫЕ НЕ БУДУТ ПОДКЛЮЧАТЬСЯ К DAL.NET.RU ]

В сети Dal.Net.Ru используется идентификация глобальных IRC операторов
на двух уровнях: на сервисах и на сервере. После идентификации на
сервисах пользователю выдается флаг +P, который разрешает взять статус
командой OPER. Эта проверка работает только когда сервер подключен к
сети, т.е. доступны сервисы. При автономной работе (например, когда
у сервера проблемы со связью) команду OPER можно использовать и без +P.

Если этот сервер будет использоваться не в Dal.Net.Ru, то сервисы
не будут выдавать +P и взять статус глобального IRC оператора
не получится. Поэтому для таких серверов нужно отключить дополнительную
защиту. Для этого до компиляции откройте файл include/config.h, найдите
строку "#define ONLY_SERVOP_CAN_GLOBAL" и замените её
на "#undef ONLY_SERVOP_CAN_GLOBAL" (без кавычек).

[ ПАРАМЕТРЫ КОНФИГУРАЦИИ, НЕ ОПИСАННЫЕ В ДОКУМЕНТАЦИИ ]

Файл документации unreal32docs.html не редактировался и не содержит
добавленных в Unreal3.2.1-DalNetRU2.1.2 настроек, команд и флагов.

Набор файлов конфигурации по-умолчанию - unrealircd.example.conf и
network.conf - содержит эти параметры. Если этот сервер будет
подключаться к Dal.Net.Ru, то этот раздел можно пропустить, т.к.
все указания по настройке приведены в unrealircd.example.conf.

set::gline-address
Адрес (E-Mail или URL), который будет показываться забаненным
глобально (G:Line). Обязательный параметр - без него сервер
не запустится.
Пример: set {gline-address "sergey@ircd.com.ru";};
Пример: set {gline-address "http://127.0.0.1";};

set::local-postfix
Локальные постфиксы для клиентов сервера. Если к серверу
подключается локальный пользователь, не имеющий обратной зоны,
то он получает адрес вида 192-168-0-1.local-postfix, где
local-postfix - значение параметра set::local-postfix,
как правило это название локальной сети. На клиентов
с обратной DNS зоной этот параметр никак не влияет.
Пример: set {local-postfix "localka.dal.net.ru";};
Не обязательный параметр. Если его не указать, то система
локальных постфиксов будет отключена.

set::local-postfix-for-all
Если параметр включен (значение yes), то локальные постфиксы
будут выдаваться всем локальным пользователям, даже имеющим
обратную DNS зону. Это позволяет привести адреса всех
локальных пользователей к одному виду. Не обязательный параметр.
Значение по-умолчанию: no.

set::no-hide-local
Если параметр включен, то пользователи с локальными адресами
не смогут скрыть свой адрес флагом +x (соответственно, они
не получат +x автоматически, если он в set::modes-on-connect).
Не обязательный параметр. Значение по-умолчанию: no.

set::accept-limit
Сколько записей может содержаться в ACCEPT списке (система
Caller ID). Не обязательный параметр. Значение по-умолчанию: 30.

set::callerid-time
Интервал между входящими запросами для системы CallerID.
Не обязательный параметр. Значение по-умолчанию 60.

oper::level
Описание этого параметра находится в следующем разделе "Уровни
доступа IRC операторов". В каждом блоке oper следует указать
level или (и) flags.

listen::options::mobile;
allow::options::mobile;
tld::options::mobile;
Эти параметры работают аналогично параметру ssl, но предназначены
для пометки пользователей, использующих мобильные IRC клиенты.
Если пользователь подключился к порту с параметром mobile, то он
считается "мобильным" и получает флаг +E. Также это даёт ему возможность
пройти по блокам allow, tld с параметром mobile.

[ УРОВНИ ДОСТУПА IRC ОПЕРАТОРОВ ]

В Unreal-DalNetRU есть возможность назначить уровень доступа,
не указывая конкретных флагов. Это рекомендуется для серверов,
входящих в сеть Dal.Net.Ru. Ниже приводится описание значения
уровней доступа для параметра level (блок oper):

[locop] - Локальный IRC оператор (local, can_rehash, helpop,
can_globops, can_localroute, can_localkill, can_kline,
can_unkline, can_localnotice, can_zline, get_umodew, can_nofakelag,
nochanlimit)

[global] - Глобальный IRC оператор (global, can_rehash, helpop,
can_wallops, can_globops, can_localroute, can_globalroute,
can_localkill, can_globalkill, can_kline, can_unkline,
can_localnotice, can_globalnotice, can_zline, can_gkline,
can_gzline, get_umodew, can_override, can_setq, can_nofakelag,
nochanlimit)

[admin] - Администратор сервера (global, admin, can_rehash, helpop,
can_wallops, can_globops, can_localroute, can_globalroute, can_localkill,
can_globalkill, can_kline, can_unkline, can_localnotice, can_globalnotice,
can_zline, can_gkline, can_gzline, get_umodew, can_override, can_setq,
can_dccdeny, can_nofakelag, nochanlimit)

[sadmin] - Администратор сервисов (global, admin, services-admin, can_rehash,
helpop, can_wallops, can_globops, can_localroute, can_globalroute,
can_localkill, can_globalkill, can_kline, can_unkline, can_localnotice,
can_globalnotice, can_zline, can_gkline, can_gzline, get_umodew, can_override,
can_setq, can_dccdeny, can_nofakelag, nochanlimit)

[netadmin] - Администратор сети (global, admin, services-admin, netadmin,
can_rehash, helpop, can_wallops, can_globops, can_localroute, can_globalroute,
can_localkill, can_globalkill, can_kline, can_unkline, can_localnotice,
can_globalnotice, can_zline, can_gkline, can_gzline, get_umodew, can_override,
can_setq, can_dccdeny, can_nofakelag, nochanlimit)

Обратите внимание, ни один из приведенных флагов не дает возможность
перезапускать и останавливать сервер, добавлять строки в конфигурацию.
Флаги can_die, can_restart, can_addline должны быть прописаны в блоке
flags отдельно.

[ КОМАНДЫ И ФЛАГИ, НЕ ОПИСАННЫЕ В ДОКУМЕНТАЦИИ ]

Полный список присутствующих в Unreal3.2.1-DalNetRU2.1.2 команд и
флагов пользователей находится во встроенной справочной системе
(команда /HELPOP, файл help.conf).

Команды серверного протокола, получаемые от U:Line серверов
(сервисов), удалены из help.conf.

[ КОНТАКТЫ И ПОДДЕРЖКА ]

Разработчик: JSergey
E-Mail: sergey@ircd.com.ru
WWW: http://ircd.com.ru
IRC: irc://ircd.com.ru/jsergey

[ БЛАГОДАРНОСТИ ]

В первую очередь хочется выразить благодарность команде
разработчиков UnrealIRCd, результат труда которых стал
основой сервера. Некоторые функции в модифицированной версии
основаны на решениях, когда-то взятых из Avatar IRCd (автор -
Highlander). Также спасибо администраторам серверов Dal.Net.Ru,
принявшим участие в тестировании и пользователям, испытавшим в связи
с этим некоторые неудобства.

Авторы идей и участники тестирования Unreal3.2.1-DalNetRU2.2.1:
* sniper (администратор сервера irc.senet.ru)
* Archangel (Dal.Net.Ru Help Team)
* Daemon (администратор сервера irc.uzaomsk.ru)
* sofydonE (администратор сервера irc.vdonsk.ru)

Авторы идей и участники тестирования Unreal3.2.1-DalNetRU2.2:
* BorgKing (администратор сервера mobile.dal.net.ru)
* PRO (администратор сервера mobile.dal.net.ru)
* sniper (администратор сервера irc.senet.ru)
* Archangel (Dal.Net.Ru Help Team)
* Loader (Dal.Net.Ru Abuse Team)
* Daemon (Dal.Net.Ru Abuse Team)

Активные участники тестирования версии Unreal3.2.1-DalNetRU2.1.1:
* Сервер irc.onet.ru (администратор ZLOnix)
* Сервер irc.uzaomsk.ru (администратор Daemon)
* BG (Dal.Net.Ru IRC Operator)
* Archangel (Dal.Net.Ru Help Team)
* shur1k (Dal.Net.Ru Help Team)

Активные участники тестирования версии Unreal3.2.1-DalNetRU2.1:
* Archangel (Dal.Net.Ru Help Team)
* Loader (Dal.Net.Ru Abuse Team)

В поиске ошибок и недоработок в Unreal3.2.1-DalNetRU2.0 принимали участие:
* Daemon (Dal.Net.Ru Abuse Team)
* Тень (Dal.Net.Ru Help Team Leader)
* Loader (Dal.Net.Ru Abuse Team)

В общем, спасибо всем, кто помогал прямо или косвенно
создавать этот сервер (как его базовую версию с дополнительными
модулями, так и данную).

[ ИСТОРИЯ ИЗМЕНЕНИЙ ]

История изменений находится в файле Changes.DalNetRU.
